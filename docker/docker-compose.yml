version: "3.8"

services:
  dicomserver:
    build:
      context: ./..
      dockerfile: src/Microsoft.Health.Dicom.Web/Dockerfile
      args:
        BUILD_CONFIGURATION: Release
        CONTINUOUS_INTEGRATION_BUILD: ${ContinuousIntegrationBuild:-false}
    platform: linux/amd64
    environment:
      AzureWebJobsStorage: "DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://azurite:10000/devstoreaccount1;QueueEndpoint=http://azurite:10001/devstoreaccount1;TableEndpoint=http://azurite:10002/devstoreaccount1;"
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_URLS: "http://+:8080"
      BlobStore__ConnectionString: "DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://azurite:10000/devstoreaccount1;"
      DicomFunctions__DurableTask__ConnectionName: "AzureWebJobsStorage"
      DicomFunctions__DurableTask__Monitor__Enabled: "true"
      DicomFunctions__Indexing__Batching__MaxParallelCount: "1"
      SqlServer__AllowDatabaseCreation: "true"
      SqlServer__ConnectionString: "Server=tcp:sql,1433;Initial Catalog=Dicom;Persist Security Info=False;User ID=sa;Password=${SAPASSWORD:-L0ca1P@ssw0rd};MultipleActiveResultSets=False;Connection Timeout=30;TrustServerCertificate=true"
      SqlServer__Initialize: "true"
    ports:
      - "8080:8080"
    restart: on-failure
    depends_on:
      - functions
      - azurite
      - sql
  functions:
    build:
      # VS Container Tools does not currently support automatically attaching a debugger to Azure Functions
      # for Docker Compose, so the Dockerfile cannot be in the same folder as the csproj
      context: ./..
      dockerfile: src/Microsoft.Health.Dicom.Functions.App/Dockerfile
      args:
        BUILD_CONFIGURATION: Release
        CONTINUOUS_INTEGRATION_BUILD: ${ContinuousIntegrationBuild:-false}
    platform: linux/amd64
    environment:
      AzureFunctionsJobHost__BlobStore__ConnectionString: "DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://azurite:10000/devstoreaccount1;"
      AzureFunctionsJobHost__Logging__Console__IsEnabled: "true"
      AzureFunctionsJobHost__SqlServer__ConnectionString: "Server=tcp:sql,1433;Initial Catalog=Dicom;Persist Security Info=False;User ID=sa;Password=${SAPASSWORD:-L0ca1P@ssw0rd};MultipleActiveResultSets=False;Connection Timeout=30;TrustServerCertificate=true"
      AzureWebJobsStorage: "DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://azurite:10000/devstoreaccount1;QueueEndpoint=http://azurite:10001/devstoreaccount1;TableEndpoint=http://azurite:10002/devstoreaccount1;"
      AZURE_FUNCTIONS_ENVIRONMENT: "Development"
      WEBSITE_HOSTNAME: "localhost:8080"
      APPINSIGHTS_INSTRUMENTATIONKEY: "00000000-0000-0000-0000-000000000000" # required to configure telemetry client even when running locally
    ports:
      - "7072:8080"
    restart: on-failure
    depends_on:
      - azurite
  azurite:
    # See here for tags: https://mcr.microsoft.com/en-us/product/azure-storage/azurite/tags
    image: mcr.microsoft.com/azure-storage/azurite:3.19.0@sha256:dfdb270d21233d4841690c9105f9556319c221acc05bb5652371d0b2d0c119df
    # # These port bindings [source]:[dest] can be uncommented to connect to the storage emulator via Microsoft Azure Storage Explorer
    # # Note that the source ports may need to change if a storage emulator is already running on localhost
    # ports:
    #   - "10001:10001"
    #   - "10000:10000"
    #   - "10002:10002"
  sql:
    build:
      context: ./..
      dockerfile: docker/sql/Dockerfile
    environment:
      SA_PASSWORD: ${SAPASSWORD:-L0ca1P@ssw0rd}
      ACCEPT_EULA: "Y"
    healthcheck:
      test: ["CMD", "/opt/mssql-tools/bin/sqlcmd", "-U", "sa", "-P", "${SAPASSWORD:-L0ca1P@ssw0rd}", "-Q", "SELECT * FROM INFORMATION_SCHEMA.TABLES"]
      interval: 10s
      timeout: 10s
      retries: 6
      start_period: 15s
    # # These port bindings [source]:[dest] can be uncommented to connect to SQL Server via Microsoft SQL Management Studio
    # ports:
    #   - "1433:1433"

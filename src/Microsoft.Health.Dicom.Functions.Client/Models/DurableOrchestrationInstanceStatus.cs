// -------------------------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License (MIT). See LICENSE in the repo root for license information.
// -------------------------------------------------------------------------------------------------

using System;
using Microsoft.Health.Dicom.Core.Models.Operations;
using Microsoft.Health.Dicom.Functions.Client.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;

namespace Microsoft.Health.Dicom.Functions.Client.Models
{
    /// <summary>
    /// Represents the metadata for an Azure Durable Orchestration instance.
    /// </summary>
    internal class DurableOrchestrationInstanceStatus
    {
        /// <summary>
        /// Gets or sets the type of the orchestration as understood by the DICOM server.
        /// </summary>
        /// <value>
        /// The <see cref="OperationType"/> if the name is recognized; otherwise <see cref="OperationType.Unknown"/>.
        /// </value>
        [JsonProperty("Name")]
        [JsonConverter(typeof(OperationTypeConverter))]
        public OperationType Type { get; set; }

        /// <summary>
        /// Gets or sets the orchestration instance ID.
        /// </summary>
        /// <value>
        /// The unique ID that denotes a particular orchestration instance. The value is a <see cref="Guid"/>
        /// if generated by the framework.
        /// </value>
        public string InstanceId { get; set; }

        /// <summary>
        /// Gets or sets the time the orchestration instance was started.
        /// </summary>
        /// <value>The <see cref="DateTime"/> when the orchestration instance was started by a trigger.</value>
        public DateTime CreatedTime { get; set; }

        /// <summary>
        /// Gets or sets the optional input passed to the orchestration instance.
        /// </summary>
        /// <value>The input passed to the orchestration instance upon start; otherwise <see langword="null"/>.</value>
        public JToken Input { get; set; }

        /// <summary>
        /// Gets or sets the optional output returned by the orchestration instance.
        /// </summary>
        /// <value>
        /// The output, if any, returned by the orchestration instance if its status is
        /// <see cref="OperationRuntimeStatus.Completed"/>; otherwise <see langword="null"/>.
        /// </value>
        public JToken Output { get; set; }

        /// <summary>
        /// Gets or sets the execution status of the orchestration instance as understood by the DICOM server.
        /// </summary>
        /// <value>
        /// The <see cref="OperationRuntimeStatus"/> that corresponds to the underlying framework's statues.
        /// </value>
        [JsonConverter(typeof(OperationRuntimeStatusConverter))]
        public OperationRuntimeStatus RuntimeStatus { get; set; }

        /// <summary>
        /// Gets or sets the optional custom status set by the orchestration instance during execution.
        /// </summary>
        /// <value>The custom status, if any; otherwise <see langword="null"/>.</value>
        public JToken CustomStatus { get; set; }
    }
}

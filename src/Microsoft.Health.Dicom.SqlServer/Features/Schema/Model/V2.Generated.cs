//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Microsoft.Health.Dicom.SqlServer.Features.Schema.Model
{
    using Microsoft.Health.SqlServer.Features.Client;
    using Microsoft.Health.SqlServer.Features.Schema.Model;

    internal class V2
    {
        internal readonly static ChangeFeedTable ChangeFeed = new ChangeFeedTable();
        internal readonly static DeletedInstanceTable DeletedInstance = new DeletedInstanceTable();
        internal readonly static ExtendedQueryTagTable ExtendedQueryTag = new ExtendedQueryTagTable();
        internal readonly static ExtendedQueryTagDateTimeTable ExtendedQueryTagDateTime = new ExtendedQueryTagDateTimeTable();
        internal readonly static ExtendedQueryTagDoubleTable ExtendedQueryTagDouble = new ExtendedQueryTagDoubleTable();
        internal readonly static ExtendedQueryTagLongTable ExtendedQueryTagLong = new ExtendedQueryTagLongTable();
        internal readonly static ExtendedQueryTagPersonNameTable ExtendedQueryTagPersonName = new ExtendedQueryTagPersonNameTable();
        internal readonly static ExtendedQueryTagStringTable ExtendedQueryTagString = new ExtendedQueryTagStringTable();
        internal readonly static InstanceTable Instance = new InstanceTable();
        internal readonly static SeriesTable Series = new SeriesTable();
        internal readonly static StudyTable Study = new StudyTable();

        internal class ChangeFeedTable : Table
        {
            internal ChangeFeedTable() : base("dbo.ChangeFeed")
            {
            }

            internal readonly BigIntColumn Sequence = new BigIntColumn("Sequence");
            internal readonly DateTimeOffsetColumn Timestamp = new DateTimeOffsetColumn("Timestamp", 7);
            internal readonly TinyIntColumn Action = new TinyIntColumn("Action");
            internal readonly VarCharColumn StudyInstanceUid = new VarCharColumn("StudyInstanceUid", 64);
            internal readonly VarCharColumn SeriesInstanceUid = new VarCharColumn("SeriesInstanceUid", 64);
            internal readonly VarCharColumn SopInstanceUid = new VarCharColumn("SopInstanceUid", 64);
            internal readonly BigIntColumn OriginalWatermark = new BigIntColumn("OriginalWatermark");
            internal readonly NullableBigIntColumn CurrentWatermark = new NullableBigIntColumn("CurrentWatermark");
            internal readonly Index IXC_ChangeFeed = new Index("IXC_ChangeFeed");
            internal readonly Index IX_ChangeFeed_StudyInstanceUid_SeriesInstanceUid_SopInstanceUid = new Index("IX_ChangeFeed_StudyInstanceUid_SeriesInstanceUid_SopInstanceUid");
        }

        internal class DeletedInstanceTable : Table
        {
            internal DeletedInstanceTable() : base("dbo.DeletedInstance")
            {
            }

            internal readonly VarCharColumn StudyInstanceUid = new VarCharColumn("StudyInstanceUid", 64);
            internal readonly VarCharColumn SeriesInstanceUid = new VarCharColumn("SeriesInstanceUid", 64);
            internal readonly VarCharColumn SopInstanceUid = new VarCharColumn("SopInstanceUid", 64);
            internal readonly BigIntColumn Watermark = new BigIntColumn("Watermark");
            internal readonly DateTimeOffsetColumn DeletedDateTime = new DateTimeOffsetColumn("DeletedDateTime", 0);
            internal readonly IntColumn RetryCount = new IntColumn("RetryCount");
            internal readonly DateTimeOffsetColumn CleanupAfter = new DateTimeOffsetColumn("CleanupAfter", 0);
            internal readonly Index IXC_DeletedInstance = new Index("IXC_DeletedInstance");
            internal readonly Index IX_DeletedInstance_RetryCount_CleanupAfter = new Index("IX_DeletedInstance_RetryCount_CleanupAfter");
        }

        internal class ExtendedQueryTagTable : Table
        {
            internal ExtendedQueryTagTable() : base("dbo.ExtendedQueryTag")
            {
            }

            internal readonly IntColumn TagKey = new IntColumn("TagKey");
            internal readonly VarCharColumn TagPath = new VarCharColumn("TagPath", 64);
            internal readonly VarCharColumn TagVR = new VarCharColumn("TagVR", 2);
            internal readonly NullableNVarCharColumn TagPrivateCreator = new NullableNVarCharColumn("TagPrivateCreator", 64);
            internal readonly TinyIntColumn TagLevel = new TinyIntColumn("TagLevel");
            internal readonly TinyIntColumn TagStatus = new TinyIntColumn("TagStatus");
            internal readonly Index IXC_ExtendedQueryTag = new Index("IXC_ExtendedQueryTag");
            internal readonly Index IX_ExtendedQueryTag_TagPath = new Index("IX_ExtendedQueryTag_TagPath");
        }

        internal class ExtendedQueryTagDateTimeTable : Table
        {
            internal ExtendedQueryTagDateTimeTable() : base("dbo.ExtendedQueryTagDateTime")
            {
            }

            internal readonly IntColumn TagKey = new IntColumn("TagKey");
            internal readonly DateTime2Column TagValue = new DateTime2Column("TagValue", 7);
            internal readonly BigIntColumn StudyKey = new BigIntColumn("StudyKey");
            internal readonly NullableBigIntColumn SeriesKey = new NullableBigIntColumn("SeriesKey");
            internal readonly NullableBigIntColumn InstanceKey = new NullableBigIntColumn("InstanceKey");
            internal readonly BigIntColumn Watermark = new BigIntColumn("Watermark");
            internal readonly Index IXC_ExtendedQueryTagDateTime = new Index("IXC_ExtendedQueryTagDateTime");
        }

        internal class ExtendedQueryTagDoubleTable : Table
        {
            internal ExtendedQueryTagDoubleTable() : base("dbo.ExtendedQueryTagDouble")
            {
            }

            internal readonly IntColumn TagKey = new IntColumn("TagKey");
            internal readonly FloatColumn TagValue = new FloatColumn("TagValue", 53);
            internal readonly BigIntColumn StudyKey = new BigIntColumn("StudyKey");
            internal readonly NullableBigIntColumn SeriesKey = new NullableBigIntColumn("SeriesKey");
            internal readonly NullableBigIntColumn InstanceKey = new NullableBigIntColumn("InstanceKey");
            internal readonly BigIntColumn Watermark = new BigIntColumn("Watermark");
            internal readonly Index IXC_ExtendedQueryTagDouble = new Index("IXC_ExtendedQueryTagDouble");
        }

        internal class ExtendedQueryTagLongTable : Table
        {
            internal ExtendedQueryTagLongTable() : base("dbo.ExtendedQueryTagLong")
            {
            }

            internal readonly IntColumn TagKey = new IntColumn("TagKey");
            internal readonly BigIntColumn TagValue = new BigIntColumn("TagValue");
            internal readonly BigIntColumn StudyKey = new BigIntColumn("StudyKey");
            internal readonly NullableBigIntColumn SeriesKey = new NullableBigIntColumn("SeriesKey");
            internal readonly NullableBigIntColumn InstanceKey = new NullableBigIntColumn("InstanceKey");
            internal readonly BigIntColumn Watermark = new BigIntColumn("Watermark");
            internal readonly Index IXC_ExtendedQueryTagLong = new Index("IXC_ExtendedQueryTagLong");
        }

        internal class ExtendedQueryTagPersonNameTable : Table
        {
            internal ExtendedQueryTagPersonNameTable() : base("dbo.ExtendedQueryTagPersonName")
            {
            }

            internal readonly IntColumn TagKey = new IntColumn("TagKey");
            internal readonly NVarCharColumn TagValue = new NVarCharColumn("TagValue", 200, "SQL_Latin1_General_CP1_CI_AI");
            internal readonly BigIntColumn StudyKey = new BigIntColumn("StudyKey");
            internal readonly NullableBigIntColumn SeriesKey = new NullableBigIntColumn("SeriesKey");
            internal readonly NullableBigIntColumn InstanceKey = new NullableBigIntColumn("InstanceKey");
            internal readonly BigIntColumn Watermark = new BigIntColumn("Watermark");
            internal const string WatermarkAndTagKey = "WatermarkAndTagKey";
            internal const string TagValueWords = "TagValueWords";
            internal readonly Index IXC_ExtendedQueryTagPersonName = new Index("IXC_ExtendedQueryTagPersonName");
            internal readonly Index IXC_ExtendedQueryTagPersonName_WatermarkAndTagKey = new Index("IXC_ExtendedQueryTagPersonName_WatermarkAndTagKey");
        }

        internal class ExtendedQueryTagStringTable : Table
        {
            internal ExtendedQueryTagStringTable() : base("dbo.ExtendedQueryTagString")
            {
            }

            internal readonly IntColumn TagKey = new IntColumn("TagKey");
            internal readonly NVarCharColumn TagValue = new NVarCharColumn("TagValue", 64);
            internal readonly BigIntColumn StudyKey = new BigIntColumn("StudyKey");
            internal readonly NullableBigIntColumn SeriesKey = new NullableBigIntColumn("SeriesKey");
            internal readonly NullableBigIntColumn InstanceKey = new NullableBigIntColumn("InstanceKey");
            internal readonly BigIntColumn Watermark = new BigIntColumn("Watermark");
            internal readonly Index IXC_ExtendedQueryTagString = new Index("IXC_ExtendedQueryTagString");
        }

        internal class InstanceTable : Table
        {
            internal InstanceTable() : base("dbo.Instance")
            {
            }

            internal readonly BigIntColumn InstanceKey = new BigIntColumn("InstanceKey");
            internal readonly BigIntColumn SeriesKey = new BigIntColumn("SeriesKey");
            internal readonly BigIntColumn StudyKey = new BigIntColumn("StudyKey");
            internal readonly VarCharColumn StudyInstanceUid = new VarCharColumn("StudyInstanceUid", 64);
            internal readonly VarCharColumn SeriesInstanceUid = new VarCharColumn("SeriesInstanceUid", 64);
            internal readonly VarCharColumn SopInstanceUid = new VarCharColumn("SopInstanceUid", 64);
            internal readonly BigIntColumn Watermark = new BigIntColumn("Watermark");
            internal readonly TinyIntColumn Status = new TinyIntColumn("Status");
            internal readonly DateTime2Column LastStatusUpdatedDate = new DateTime2Column("LastStatusUpdatedDate", 7);
            internal readonly DateTime2Column CreatedDate = new DateTime2Column("CreatedDate", 7);
            internal readonly Index IXC_Instance = new Index("IXC_Instance");
            internal readonly Index IX_Instance_StudyInstanceUid_SeriesInstanceUid_SopInstanceUid = new Index("IX_Instance_StudyInstanceUid_SeriesInstanceUid_SopInstanceUid");
            internal readonly Index IX_Instance_StudyInstanceUid_Status = new Index("IX_Instance_StudyInstanceUid_Status");
            internal readonly Index IX_Instance_StudyInstanceUid_SeriesInstanceUid_Status = new Index("IX_Instance_StudyInstanceUid_SeriesInstanceUid_Status");
            internal readonly Index IX_Instance_SopInstanceUid_Status = new Index("IX_Instance_SopInstanceUid_Status");
            internal readonly Index IX_Instance_Watermark = new Index("IX_Instance_Watermark");
            internal readonly Index IX_Instance_SeriesKey_Status = new Index("IX_Instance_SeriesKey_Status");
            internal readonly Index IX_Instance_StudyKey_Status = new Index("IX_Instance_StudyKey_Status");
        }

        internal class SeriesTable : Table
        {
            internal SeriesTable() : base("dbo.Series")
            {
            }

            internal readonly BigIntColumn SeriesKey = new BigIntColumn("SeriesKey");
            internal readonly BigIntColumn StudyKey = new BigIntColumn("StudyKey");
            internal readonly VarCharColumn SeriesInstanceUid = new VarCharColumn("SeriesInstanceUid", 64);
            internal readonly NullableNVarCharColumn Modality = new NullableNVarCharColumn("Modality", 16);
            internal readonly NullableDateColumn PerformedProcedureStepStartDate = new NullableDateColumn("PerformedProcedureStepStartDate");
            internal readonly Index IXC_Series = new Index("IXC_Series");
            internal readonly Index IX_Series_SeriesKey = new Index("IX_Series_SeriesKey");
            internal readonly Index IX_Series_SeriesInstanceUid = new Index("IX_Series_SeriesInstanceUid");
            internal readonly Index IX_Series_Modality = new Index("IX_Series_Modality");
            internal readonly Index IX_Series_PerformedProcedureStepStartDate = new Index("IX_Series_PerformedProcedureStepStartDate");
        }

        internal class StudyTable : Table
        {
            internal StudyTable() : base("dbo.Study")
            {
            }

            internal readonly BigIntColumn StudyKey = new BigIntColumn("StudyKey");
            internal readonly VarCharColumn StudyInstanceUid = new VarCharColumn("StudyInstanceUid", 64);
            internal readonly NVarCharColumn PatientId = new NVarCharColumn("PatientId", 64);
            internal readonly NullableNVarCharColumn PatientName = new NullableNVarCharColumn("PatientName", 200, "SQL_Latin1_General_CP1_CI_AI");
            internal readonly NullableNVarCharColumn ReferringPhysicianName = new NullableNVarCharColumn("ReferringPhysicianName", 200, "SQL_Latin1_General_CP1_CI_AI");
            internal readonly NullableDateColumn StudyDate = new NullableDateColumn("StudyDate");
            internal readonly NullableNVarCharColumn StudyDescription = new NullableNVarCharColumn("StudyDescription", 64);
            internal readonly NullableNVarCharColumn AccessionNumber = new NullableNVarCharColumn("AccessionNumber", 16);
            internal const string PatientNameWords = "PatientNameWords";
            internal readonly Index IXC_Study = new Index("IXC_Study");
            internal readonly Index IX_Study_StudyInstanceUid = new Index("IX_Study_StudyInstanceUid");
            internal readonly Index IX_Study_PatientId = new Index("IX_Study_PatientId");
            internal readonly Index IX_Study_PatientName = new Index("IX_Study_PatientName");
            internal readonly Index IX_Study_ReferringPhysicianName = new Index("IX_Study_ReferringPhysicianName");
            internal readonly Index IX_Study_StudyDate = new Index("IX_Study_StudyDate");
            internal readonly Index IX_Study_StudyDescription = new Index("IX_Study_StudyDescription");
            internal readonly Index IX_Study_AccessionNumber = new Index("IX_Study_AccessionNumber");
        }
    }
}
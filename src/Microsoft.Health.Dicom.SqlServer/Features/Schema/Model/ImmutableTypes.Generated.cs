//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Microsoft.Health.Dicom.SqlServer.Features.Schema.Model
{
    using Microsoft.Health.SqlServer.Features.Client;
    using Microsoft.Health.SqlServer.Features.Schema.Model;

    internal class AddCustomTagsInputTableTypeV1TableValuedParameterDefinition : TableValuedParameterDefinition<AddCustomTagsInputTableTypeV1Row>
    {
        internal AddCustomTagsInputTableTypeV1TableValuedParameterDefinition(System.String parameterName) : base(parameterName, "dbo.AddCustomTagsInputTableType_1")
        {
        }

        internal readonly VarCharColumn TagPath = new VarCharColumn("TagPath", 64);
        internal readonly VarCharColumn TagVR = new VarCharColumn("TagVR", 2);
        internal readonly TinyIntColumn TagLevel = new TinyIntColumn("TagLevel");
        internal readonly TinyIntColumn TagStatus = new TinyIntColumn("TagStatus");

        protected override global::System.Collections.Generic.IEnumerable<Column> Columns => new Column[] { TagPath, TagVR, TagLevel, TagStatus };

        protected override void FillSqlDataRecord(global::Microsoft.Data.SqlClient.Server.SqlDataRecord record, AddCustomTagsInputTableTypeV1Row rowData)
        {
            TagPath.Set(record, 0, rowData.TagPath);
            TagVR.Set(record, 1, rowData.TagVR);
            TagLevel.Set(record, 2, rowData.TagLevel);
            TagStatus.Set(record, 3, rowData.TagStatus);
        }
    }

    internal struct AddCustomTagsInputTableTypeV1Row
    {
        internal AddCustomTagsInputTableTypeV1Row(System.String TagPath, System.String TagVR, System.Byte TagLevel, System.Byte TagStatus)
        {
            this.TagPath = TagPath;
            this.TagVR = TagVR;
            this.TagLevel = TagLevel;
            this.TagStatus = TagStatus;
        }

        internal System.String TagPath { get; }
        internal System.String TagVR { get; }
        internal System.Byte TagLevel { get; }
        internal System.Byte TagStatus { get; }
    }
}
jobs:
- job: provision
  pool:
    vmImage: $(windowsVmImage)
  steps:
  - task: AzurePowerShell@4
    displayName: 'New Resource Group'
    inputs:
      azureSubscription: $(azureSubscriptionName)
      azurePowerShellVersion: latestVersion
      ScriptType: InlineScript
      Inline: |
        New-AzResourceGroup -Name "$(resourceGroupName)" -Location "$(resourceGroupRegion)" -Force
  - template: add-aad-test-environment.yml
  - task: AzurePowerShell@4
    displayName: 'New Azure resource group deployment'
    inputs:
      azureSubscription: $(azureSubscriptionName)
      azurePowerShellVersion: latestVersion
      ScriptType: InlineScript
      Inline: |
        Add-Type -AssemblyName System.Web
        
        $deployPath = "$(System.DefaultWorkingDirectory)/samples/templates"
    
        $additionalProperties = @{
            "SqlServer__DeleteAllDataOnStartup" = "true"
        }
    
        $templateParameters = @{
            appServicePlanResourceGroup = "$(appServicePlanResourceGroup)"
            appServicePlanName = "$(appServicePlanName)"
            serviceName = "$(deploymentName)"
            additionalDicomServerConfigProperties = $additionalProperties
            sqlAdminPassword = [System.Web.Security.Membership]::GeneratePassword(15, 5).replace(";", "_").replace("$","!")
            securityAuthenticationAuthority = "https://login.microsoftonline.com/$(tenant-id)"
            securityAuthenticationAudience = "$(testEnvironmentUrl)"
        }
        
        New-AzResourceGroupDeployment -Name "$(deploymentName)" -ResourceGroupName "$(resourceGroupName)" -TemplateFile $deployPath/default-azuredeploy.json -TemplateParameterObject $templateParameters -Verbose
        
        Set-AzKeyVaultAccessPolicy -VaultName "$(deploymentName)" -ObjectId $(azureServiceConnectionOid) -PermissionsToSecrets list,get

  - task: DownloadBuildArtifacts@0
    inputs:
      buildType: 'current'
      downloadType: 'single'
      downloadPath: '$(System.ArtifactsDirectory)'
      artifactName: 'deploy'
  
  - task: AzureRmWebAppDeployment@3
    displayName: 'Azure app service deployment'
    inputs:
      azureSubscription: $(azureSubscriptionName)
      WebAppName: '$(deploymentName)'
      Package: '$(System.ArtifactsDirectory)/deploy/Microsoft.Health.Dicom.Web.zip'
      TakeAppOfflineFlag: true

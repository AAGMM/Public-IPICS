# DESCRIPTION:
# Builds, tests and packages the solution for the CI build configuration.
name: $(SourceBranchName)-$(Date:yyyyMMdd)$(Rev:-r)

variables:
- template: ci-variables.yml

trigger:
  branches:
    include:
    - main

pr: none

stages:
- stage: UpdateVersion
  displayName: 'Determine Semver'
  dependsOn: []
  jobs:
  - job: Semver
    pool:
      vmImage: 'windows-latest'
    steps:
    - template: ./update-semver.yml

- stage: BuildRunUnitTests
  displayName: 'Build and run unit tests'
  dependsOn:
  - UpdateVersion
  variables:
    assemblySemVer: $[stageDependencies.UpdateVersion.Semver.outputs['DicomVersion.GitVersion.AssemblySemVer']]
    assemblySemFileVer: $[stageDependencies.UpdateVersion.Semver.outputs['DicomVersion.GitVersion.AssemblySemFileVer']]
    informationalVersion: $[stageDependencies.UpdateVersion.Semver.outputs['DicomVersion.GitVersion.InformationalVersion']]
    majorMinorPatch: $[stageDependencies.UpdateVersion.Semver.outputs['DicomVersion.GitVersion.MajorMinorPatch']]
    nuGetVersion: $[stageDependencies.UpdateVersion.Semver.outputs['DicomVersion.GitVersion.SemVer']]
  jobs:
  - job: Windows
    pool:
      vmImage: $(windowsVmImage)
    steps:
    - template: build.yml

  - job: Linux
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - template: build.yml
      parameters:
        packageArtifacts: false
        analyzeSecurity: false
        packageNugets: false

- stage: UpdateCIEnvironment
  displayName: 'Update CI Environment'
  dependsOn:
  - BuildRunUnitTests
  jobs:
  - template: deploy.yml

- stage: ValidateAPIVersioning
  displayName: 'Detect Breaking Changes In API'
  dependsOn:
  - BuildRunUnitTests
  jobs:
  - template: versioning.yml

- stage: RunIntegrationTests
  displayName: 'Integration tests'
  dependsOn:
  - UpdateTestEnvironment
  jobs:
  - template: run-integration-tests.yml

- stage: RunE2ETests
  displayName: 'E2E tests'
  dependsOn:
  - UpdateTestEnvironment
  jobs:
  - template: run-e2e-tests.yml

- stage: PublishNuget
  displayName: 'Publish Nugets'
  dependsOn:
  - RunIntegrationTests
  - RunE2ETests
  jobs:
  - job: PublishNugets
    pool:
      vmImage: $(windowsVmImage)
    steps:
    - template: publish-nuget.yml

- stage: PublishContainer
  displayName: 'Publish Docker CI Container'
  dependsOn:
  - RunIntegrationTests
  - RunE2ETests
  jobs:
  - job: 'Docker'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - template: docker-build-push.yml
      parameters:
        tag: $(imageTag)
# DESCRIPTION:
# Builds, tests and packages the solution for the CI build configuration.
name: $(SourceBranchName)-$(Date:yyyyMMdd)$(Rev:-r)

variables:
- template: ci-variables.yml

trigger:
  branches:
    include:
    - main

pr: none

stages:
- stage: UpdateVersion
  displayName: 'Determine Semver'
  dependsOn: []
  jobs:
  - job: Semver
    pool:
      vmImage: 'windows-latest'
    steps:
    - template: ./update-semver.yml

- stage: BuildRunUnitTests
  displayName: 'Build and Test'
  dependsOn:
  - UpdateVersion
  variables:
    assemblySemVer: $[stageDependencies.UpdateVersion.Semver.outputs['DicomVersion.GitVersion.AssemblySemVer']]
    assemblySemFileVer: $[stageDependencies.UpdateVersion.Semver.outputs['DicomVersion.GitVersion.AssemblySemFileVer']]
    informationalVersion: $[stageDependencies.UpdateVersion.Semver.outputs['DicomVersion.GitVersion.InformationalVersion']]
    majorMinorPatch: $[stageDependencies.UpdateVersion.Semver.outputs['DicomVersion.GitVersion.MajorMinorPatch']]
    nuGetVersion: $[stageDependencies.UpdateVersion.Semver.outputs['DicomVersion.GitVersion.SemVer']]
  jobs:
  - job: Linux
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - template: build.yml

- stage: AnalyzeSecurity
  displayName: 'Run Security Analysis'
  dependsOn:
  - BuildRunUnitTests
  jobs:
  - job: Windows
    pool:
      vmImage: $(windowsVmImage)
    steps:
    - template: analyze.yml

- stage: UpdateTestEnvironment
  displayName: 'Update Test Environment'
  dependsOn:
  - BuildRunUnitTests
  jobs:
  - job: provision
    pool:
      vmImage: $(windowsVmImage)
    steps:
    - task: DownloadBuildArtifacts@0
      inputs:
        buildType: 'current'
        downloadType: 'single'
        downloadPath: '$(System.ArtifactsDirectory)'
        artifactName: 'deploy'
    - template: add-aad-test-environment.yml
    - task: AzureRmWebAppDeployment@3
      displayName: 'Azure app service deployment'
      inputs:
        azureSubscription: $(azureSubscriptionName)
        WebAppName: '$(deploymentName)'
        Package: '$(System.ArtifactsDirectory)/deploy/Microsoft.Health.Dicom.Web.zip'
        TakeAppOfflineFlag: true

- stage: ValidateAPIVersioning
  displayName: 'Detect Breaking Changes In API'
  dependsOn:
  - BuildRunUnitTests
  jobs:
  - template: versioning.yml

- stage: RunIntegrationTests
  displayName: 'Integration tests'
  dependsOn:
  - UpdateTestEnvironment
  jobs:
  - template: run-integration-tests.yml

- stage: RunE2ETests
  displayName: 'E2E tests'
  dependsOn:
  - UpdateTestEnvironment
  jobs:
  - template: run-e2e-tests.yml

- stage: PublishNuget
  displayName: 'Publish Nugets'
  dependsOn:
  - AnalyzeSecurity
  - ValidateAPIVersioning
  - RunIntegrationTests
  - RunE2ETests
  jobs:
  - job: PublishNugets
    pool:
      vmImage: $(windowsVmImage)
    steps:
    - template: publish-nuget.yml

- stage: PublishContainer
  displayName: 'Publish Docker CI Container'
  dependsOn:
  - AnalyzeSecurity
  - ValidateAPIVersioning
  - RunIntegrationTests
  - RunE2ETests
  jobs:
  - job: 'Docker'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - template: docker-build-push.yml
      parameters:
        tag: $(imageTag)
jobs:
- job: SetupAndRun
  displayName: 'Integration Tests'
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - task: UseDotNet@2
    displayName: 'Use .Net Core sdk'
    inputs:
      useGlobalJson: true

  - bash: |
      # Set Environment Variables
      echo "##vso[task.setvariable variable=BlobStore__ConnectionString]UseDevelopmentStorage=true"
      echo "##vso[task.setvariable variable=SqlServer__ConnectionString]Server=(local);Persist Security Info=False;User ID=sa;Password=L0ca1P@ssw0rd;MultipleActiveResultSets=False;Connection Timeout=30;TrustServerCertificate=true"

      # Start Azurite
      docker run -p 10000:10000 -p 10001:10001 -p 10002:10002 -d --rm --name azure-storage mcr.microsoft.com/azure-storage/azurite:latest

      # Start SQL Server
      docker build -t fulltext-mssql -f "docker/sql/Dockerfile" .
      docker run -e "ACCEPT_EULA=Y" -e "SA_PASSWORD=L0ca1P@ssw0rd" -p 1433:1433 -d --rm --name sql-server fulltext-mssql

      # Wait for SQL to start
      for i in {1..6}; do docker exec sql-server sh -c "/opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P L0ca1P@ssw0rd -Q 'SELECT * FROM INFORMATION_SCHEMA.TABLES'" && exit 0 || sleep 5; done; exit 1
    displayName: 'Start Docker Dependencies'

  - template: ../common/run-integration-tests.yml

  - script: |
      docker stop azure-storage
      docker stop sql-server
    displayName: 'Stop Docker Dependencies'
    condition: always()

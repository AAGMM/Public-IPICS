steps:
- task: PowerShell@2
  displayName: 'Copy Binaries'
  inputs:
    targetType: 'inline'
    script: |
      # Assume we're running on Windows as tasks like AntiMalware require it
      $binPattern = '([^\\]+)\\bin\\Release$'
      $binDirectories = Get-ChildItem -Directory -Recurse -Filter '$(buildConfiguration)' | Select-Object -ExpandProperty 'FullName'

      foreach ($binFolder in $binDirectories)
      {
          $matchInfo = $binFolder | Select-String -Pattern $binPattern
          if ($matchInfo)
          {
              $projectName = $matchInfo.Matches[0].Groups[1].Value
              $outputDir = Join-Path -Path '$(Build.StagingDirectory)' -ChildPath 'bin' -AdditionalChildPath $projectName

              Write-Host "Copying '$binFolder' to '$outputDir'"
              Copy-Item -Path $binFolder -Destination $outputDir -Recurse
          }
      }
    failOnStderr: true
    pwsh: true

- task: AntiMalware@3
  displayName: 'Check Binaries for Malware'
  inputs:
    InputType: 'Basic'
    ScanType: 'CustomScan'
    FileDirPath: '$(Build.StagingDirectory)'
    EnableServices: true
    TreatSignatureUpdateFailureAs: 'Standard'
    SignatureFreshness: 'OneDay'
    TreatStaleSignatureAs: 'Error'

- task: Armory@2
  displayName: 'Scan Sample ARM Templates'
  inputs:
    targetDirectory: '$(Build.SourcesDirectory)\samples\templates'
    targetFiles: 'f|*.json'

- task: BinSkim@3
  inputs:
    InputType: 'Basic'
    Function: 'analyze'
    AnalyzeTarget: '$(Build.StagingDirectory)\bin\*.dll;$(Build.StagingDirectory)\bin\*.exe'
    AnalyzeRecurse: true

- task: CredScan@2
  displayName: 'Run CredScan'
  inputs:
    scanFolder: '$(Build.SourcesDirectory)'
    toolMajorVersion: 'V1'
    outputFormat: 'sarif'
steps:
- task: DownloadBuildArtifacts@0
  inputs:
    buildType: 'current'
    downloadType: 'single'
    downloadPath: '$(System.ArtifactsDirectory)'
    artifactName: 'IntegrationTests'

- script: dotnet test "Microsoft.Health.Dicom.Tests.Integration.dll" -l trx -r "$(Agent.TempDirectory)/TestResults" --collect "XPlat Code Coverage" -s "$(build.sourcesDirectory)/CodeCoverage.runsettings" -v normal
  displayName: 'dotnet test Microsoft.Health.Dicom.Tests.Integration.dll'
  workingDirectory: '$(System.ArtifactsDirectory)/IntegrationTests/Microsoft.Health.Dicom.Tests.Integration'

- task: PublishTestResults@2
  displayName: 'Publish Test Results'
  condition: succeededOrFailed()
  inputs:
    testResultsFormat: 'VSTest'
    testResultsFiles: '*.trx'
    searchFolder: '$(Agent.TempDirectory)/TestResults'
    buildConfiguration: '$(buildConfiguration)'

- task: PublishPipelineArtifact@1
  displayName: 'Output Code Coverage'
  condition: succeededOrFailed()
  inputs:
    artifactName: 'CodeCoverage.IntegrationTests'
    path: '$(Agent.TempDirectory)/TestResults/coverage.cobertura.xml'
